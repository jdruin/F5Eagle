<?xml version="1.0"?>
<!--
 *
 * Web.config -
 *
 * Copyright (c) 2007-2012 by Joe Mistachkin.  All rights reserved.
 *
 * See the file "license.terms" for information on usage and redistribution of
 * this file, and for a DISCLAIMER OF ALL WARRANTIES.
 *
 * RCS: @(#) $Id: $
 *
-->
<configuration>
  <appSettings>
    <!--
        TODO: Make sure that Eagle can find the script library when it tries
              to initialize the interpreter(s).  Using an empty string for
              this value means "attempt to automatically detect based on the
              provided assembly location and the environment".
    -->
    <add key="EAGLE_LIBRARY" value="" />

    <!--
        NOTE: Do we need any custom setup done in the interpreter prior to
              making it available for remote use?  If so, that should go here.
              This following is an example of what can be done.
    -->
    <add key="SetupScript" value="catch {uri softwareupdates true};
                                  proc puts { args } { return $args }" />

    <!--
        NOTE: Treat the setup script (above) as fully trusted?  Normally, this
              will be set to true because the setup script may need to use
              commands that are unavailable in a safe interpreter in order to
              be truly useful.
    -->
    <add key="TrustedSetup" value="true" />

    <!--
        NOTE: Enable console output?  Normally, this will be set to false
              because a server process does not typically have a console;
              however, it can be useful in some situations.
    -->
    <!--
    <add key="NeedConsole" value="true" />
    -->

    <!--
        NOTE: What are the initial interpreter creation flags?  Setting this
              will override the service default.  However, the final
              interpreter creation flags will be determined by starting with
              this value and modifying it according to the settings in the
              environment.
    -->
    <!--
    <add key="CreateFlags" value="None" />
    -->

    <!--
        NOTE: What are the Eagle engine flags?  Setting this will override the
              service default.
    -->
    <!--
    <add key="EngineFlags" value="None" />
    -->

    <!--
        NOTE: What are the Eagle substitution flags?  Setting this will
              override the service default.
    -->
    <!--
    <add key="SubstitutionFlags" value="All" />
    -->

    <!--
        NOTE: What are the Eagle event flags?  Setting this will override the
              service default.
    -->
    <!--
    <add key="EventFlags" value="Engine" />
    -->

    <!--
        NOTE: What are the Eagle expression flags?  Setting this will override
              the service default.
    -->
    <!--
    <add key="ExpressionFlags" value="All" />
    -->
  </appSettings>

  <system.web>
    <!--
        Set compilation debug="true" to insert debugging symbols into the
        compiled page. Because this affects performance, set this value to true
        only during development.
    -->
    <compilation debug="true" />

    <!--
        The <authentication> section enables configuration of the security
        authentication mode used by ASP.NET to identify an incoming user.
    -->
    <authentication mode="Windows" />

    <!--
        The <customErrors> section enables configuration of what to do if/when
        an unhandled error occurs during the execution of a request.
        Specifically, it enables developers to configure html error pages to be
        displayed in place of a error stack trace.

    <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
      <error statusCode="403" redirect="NoAccess.htm" />
      <error statusCode="404" redirect="FileNotFound.htm" />
    </customErrors>
    -->
  </system.web>
</configuration>
